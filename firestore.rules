rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isAuthenticated() {
      return request.auth != null;
    }

    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // User collection rules - for dashboard display and user creation
    match /users/{userId} {
      // Allow admins to read all users for dashboard
      // Allow users to read their own documents
      allow read: if isAdmin() || request.auth.uid == userId;
      
      // Allow creation of user document during signup
      allow create: if request.auth.uid == userId && 
        request.resource.data.keys().hasAll(['id', 'email', 'role']) && 
        request.resource.data.role == 'user';
        
      allow update: if request.auth.uid == userId || isAdmin();
      allow delete: if isAdmin();
    }

    // Admin logs collection
    match /adminLogs/{logId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // Admin stats collection
    match /adminStats/{document=**} {
      allow read: if isAdmin();
      allow write: if isAdmin();
    }

    // Programs collection
    match /programs/{programId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Enrollments collection
    match /enrollments/{enrollmentId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // Status collection - for online/offline status
    match /status/{userId} {
      allow read: if isAdmin();  // For dashboard online status
      allow write: if request.auth.uid == userId;
    }
  }
} 